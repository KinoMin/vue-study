{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport MyHeader from \"@/components/MyHeader\";\nimport List from \"@/components/List\";\nimport MyFooter from '@/components/MyFooter';\nexport default {\n  name: \"App\",\n  components: {\n    List,\n    MyFooter,\n    MyHeader\n  },\n  data() {\n    return {\n      // todos: [\n      //   {id: '001', title: '吃饭', done: false},\n      //   {id: '002', title: \"睡觉\", done: true},\n      //   {id: '003', title: '打代码', done: false}\n      // ]\n      todos: JSON.parse(localStorage.getItem('todos')) || []\n    };\n  },\n  methods: {\n    //添加的todo\n    addTodo(todo) {\n      console.log('我是app组件，我收到了数据');\n      this.todos.unshift(todo);\n    },\n    checkTodo(id) {\n      const todo = this.todos.find(todo => todo.id === id);\n      todo.done = !todo.done;\n    },\n    deleteTodo(id) {\n      this.todos = this.todos.filter(todo => todo.id !== id);\n    },\n    checkAllTodo(done) {\n      this.todos.forEach(todo => todo.done = done);\n    },\n    clearAllDoneTodo() {\n      this.todos = this.todos.filter(todo => !todo.done);\n    }\n  },\n  watch: {\n    //深度监视\n    todos: {\n      deep: true,\n      //深度监视当我监视数组中的对象的某个属性的变化它也会产生反应\n      handler(newValue) {\n        //本地存储存的是key和value都是字符串\n        //数据存放在本地存储中\n        localStorage.setItem(\"todos\", JSON.stringify(newValue));\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAqBA;AACA;AACA;AACA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACA;MACA;MACA;MACA;MACA;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACAC;MACA;IACA;IACAC;MACA;MACAC;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;IACAT;MACAU;MAAA;MACAC;QACA;QACA;QACAC;MACA;IACA;EACA;AACA","names":["name","components","List","MyFooter","MyHeader","data","todos","methods","addTodo","console","checkTodo","todo","deleteTodo","checkAllTodo","clearAllDoneTodo","watch","deep","handler","localStorage"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"todo-container\">\n      <div class=\"todo-wrap\">\n        <MyHeader :addTodo=\"addTodo\"/>\n        <List\n            :todos=\"todos\"\n            :checkTodo=\"checkTodo\"\n            :deleteTodo=\"deleteTodo\"\n        />\n        <MyFooter\n            :todos=\"todos\"\n            :checkAllTodo=\"checkAllTodo\"\n            :clearAllDoneTodo=\"clearAllDoneTodo\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MyHeader from \"@/components/MyHeader\";\nimport List from \"@/components/List\";\nimport MyFooter from '@/components/MyFooter';\nexport default {\n  name: \"App\",\n  components:{\n    List,\n    MyFooter,\n    MyHeader\n  },\n  data() {\n    return {\n      // todos: [\n      //   {id: '001', title: '吃饭', done: false},\n      //   {id: '002', title: \"睡觉\", done: true},\n      //   {id: '003', title: '打代码', done: false}\n      // ]\n      todos:JSON.parse(localStorage.getItem('todos')) || []\n    }\n  },\n  methods:{\n    //添加的todo\n    addTodo(todo){\n      console.log('我是app组件，我收到了数据');\n      this.todos.unshift(todo);\n    },\n    checkTodo(id){\n      const todo = this.todos.find(todo => todo.id === id);\n      todo.done = !todo.done;\n    },\n    deleteTodo(id){\n      this.todos = this.todos.filter(todo => todo.id !== id);\n    },\n    checkAllTodo(done){\n      this.todos.forEach(todo => todo.done = done);\n    },\n    clearAllDoneTodo(){\n      this.todos = this.todos.filter(todo => !todo.done)\n    }\n  },\n  watch:{\n    //深度监视\n    todos:{\n      deep: true, //深度监视当我监视数组中的对象的某个属性的变化它也会产生反应\n      handler(newValue) {\n        //本地存储存的是key和value都是字符串\n        //数据存放在本地存储中\n        localStorage.setItem(\"todos\", JSON.stringify(newValue))\n      }\n    },\n  }\n}\n</script>\n\n<style>\n/*base*/\nbody {\n  background: #fff;\n}\n\n.btn {\n  display: inline-block;\n  padding: 4px 12px;\n  margin-bottom: 0;\n  font-size: 14px;\n  line-height: 20px;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);\n  border-radius: 4px;\n}\n\n.btn-danger {\n  color: #fff;\n  background-color: #da4f49;\n  border: 1px solid #bd362f;\n}\n\n.btn-danger:hover {\n  color: #fff;\n  background-color: #bd362f;\n}\n\n.btn:focus {\n  outline: none;\n}\n\n.todo-container {\n  width: 600px;\n  margin: 0 auto;\n}\n.todo-container .todo-wrap {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n\n</style>\n\n\n"]},"metadata":{},"sourceType":"module"}