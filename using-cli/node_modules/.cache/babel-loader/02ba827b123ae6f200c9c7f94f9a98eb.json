{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport pubsub from 'pubsub-js';\nimport MyList from './components/MyList';\nimport MyHeader from './components/MyHeader';\nimport MyFooter from './components/MyFooter';\nexport default {\n  name: 'App',\n  components: {\n    MyList,\n    MyHeader,\n    MyFooter\n  },\n  data() {\n    return {\n      todos: JSON.parse(localStorage.getItem('todos')) || []\n    };\n  },\n  methods: {\n    // 添加一个todo\n    handlerAddTodo(_, todo) {\n      this.todos.unshift(todo);\n    },\n    // 变更一个 todo 的状态\n    handlerCheckTodo(_, id) {\n      this.todos.forEach(todo => {\n        if (todo.id === id) {\n          todo.done = !todo.done;\n        }\n      });\n    },\n    // 删除一个 todo\n    handlerDeleteTodo(_, id) {\n      this.todos = this.todos.filter(todo => todo.id !== id);\n    },\n    // 全选 or 全不选\n    hadlerCheckAllTodo(_, done) {\n      this.todos.forEach(todo => {\n        todo.done = done;\n      });\n    },\n    // 清除已选择\n    hadlerClearAllTodo(_) {\n      this.todos = this.todos.filter(todo => {\n        return !todo.done;\n      });\n    },\n    // 修改一个 todo\n    handlerUpdateTodo(_, id, title) {\n      this.todos.forEach(item => {\n        if (item.id === id) {\n          item.title = title;\n        }\n      });\n    }\n  },\n  mounted() {\n    // 全部使用 pubsub(消费/订阅)\n    this.pubId = pubsub.subscribe('addTodo', this.handlerAddTodo);\n    this.pubId = pubsub.subscribe('checkTodo', this.handlerCheckTodo);\n    this.pubId = pubsub.subscribe('deleteTodo', this.handlerDeleteTodo);\n    this.pubId = pubsub.subscribe('checkAllTodo', this.hadlerCheckAllTodo);\n    this.pubId = pubsub.subscribe('clearAllTodo', this.hadlerClearAllTodo);\n    this.pubId = pubsub.subscribe('updateTodo', this.handlerUpdateTodo);\n  },\n  // 深度监视\n  watch: {\n    todos: {\n      deep: true,\n      // 监视数据发生变化时, 把监视数据写入到 localStorage\n      handler(value) {\n        localStorage.setItem('todos', JSON.stringify(value));\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAaA;AACA;AACA;AACA;AACA;EACAA;EACAC;IAAAC;IAAAC;IAAAC;EAAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;QACA;UACAC;QACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;QACAF;MACA;IACA;IACA;IACAG;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;QACA;UACAC;QACA;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;EACA;EACAC;IACAX;MACAY;MACA;MACAC;QACAC;MACA;IACA;EACA;AACA","names":["name","components","MyList","MyHeader","MyFooter","data","todos","methods","handlerAddTodo","handlerCheckTodo","todo","handlerDeleteTodo","hadlerCheckAllTodo","hadlerClearAllTodo","handlerUpdateTodo","item","mounted","watch","deep","handler","localStorage"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"root\">\n    <div class=\"todo-container\">\n      <div class=\"todo-wrap\">\n        <MyHeader/>\n        <MyList :todos=\"todos\"/>\n        <MyFooter :todos=\"todos\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport pubsub from 'pubsub-js';\nimport MyList from './components/MyList';\nimport MyHeader from './components/MyHeader';\nimport MyFooter from './components/MyFooter';\nexport default {\n  name: 'App',\n  components: {MyList, MyHeader, MyFooter},\n  data () {\n    return {\n      todos:JSON.parse(localStorage.getItem('todos')) || []  \n    }\n  },\n\tmethods: {\n\t\t// 添加一个todo\n\t\thandlerAddTodo(_, todo){\n\t\t\t\tthis.todos.unshift(todo);\n\t\t},\n\t\t// 变更一个 todo 的状态\n\t\thandlerCheckTodo(_, id) {\n\t\t\t\tthis.todos.forEach((todo) => {\n\t\t\t\t\tif(todo.id === id) {\n\t\t\t\t\t\ttodo.done = !todo.done\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t},\n\t\t// 删除一个 todo\n\t\thandlerDeleteTodo(_, id) {\n\t\t\tthis.todos = this.todos.filter( todo => todo.id !== id )\n\t\t},\n\t\t// 全选 or 全不选\n\t\thadlerCheckAllTodo(_, done) {\n\t\t\tthis.todos.forEach(todo => {\n\t\t\t\ttodo.done = done\n\t\t\t})\n\t\t},\n\t\t// 清除已选择\n\t\thadlerClearAllTodo(_,) {\n\t\t\tthis.todos = this.todos.filter((todo) => {\n\t\t\t\treturn !todo.done\n\t\t\t})\n\t\t},\n\t\t// 修改一个 todo\n\t\thandlerUpdateTodo(_, id, title) {\n\t\t\tthis.todos.forEach((item) => {\n\t\t\t\tif(item.id === id) {\n\t\t\t\t\titem.title = title\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t},\n  mounted () {\n\t\t// 全部使用 pubsub(消费/订阅)\n    this.pubId = pubsub.subscribe('addTodo', this.handlerAddTodo);\n\t\tthis.pubId = pubsub.subscribe('checkTodo', this.handlerCheckTodo);\n\t\tthis.pubId = pubsub.subscribe('deleteTodo', this.handlerDeleteTodo);\n\t\tthis.pubId = pubsub.subscribe('checkAllTodo', this.hadlerCheckAllTodo);\n\t\tthis.pubId = pubsub.subscribe('clearAllTodo', this.hadlerClearAllTodo);\n\t\tthis.pubId = pubsub.subscribe('updateTodo', this.handlerUpdateTodo);\n  },\n\t// 深度监视\n\twatch: {\n\t\ttodos: {\n\t\t\tdeep: true,\n\t\t\t// 监视数据发生变化时, 把监视数据写入到 localStorage\n\t\t\thandler(value) {\n\t\t\t\tlocalStorage.setItem('todos', JSON.stringify(value));\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<style>\n\t/*base*/\n\tbody {\n\t\tbackground: #fff;\n\t}\n\t.btn {\n\t\tdisplay: inline-block;\n\t\tpadding: 4px 12px;\n\t\tmargin-bottom: 0;\n\t\tfont-size: 14px;\n\t\tline-height: 20px;\n\t\ttext-align: center;\n\t\tvertical-align: middle;\n\t\tcursor: pointer;\n\t\tbox-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);\n\t\tborder-radius: 4px;\n\t}\n\t.btn-danger {\n\t\tcolor: #fff;\n\t\tbackground-color: #da4f49;\n\t\tborder: 1px solid #bd362f;\n\t}\n\t.btn-edit {\n\t\tcolor: #fff;\n\t\tbackground-color: skyblue;\n\t\tborder: 1px solid rgb(103, 159, 180);\n\t\tmargin-right: 5px;\n\t}\n\t.btn-danger:hover {\n\t\tcolor: #fff;\n\t\tbackground-color: #bd362f;\n\t}\n\t.btn:focus {\n\t\toutline: none;\n\t}\n\t.todo-container {\n\t\twidth: 600px;\n\t\tmargin: 0 auto;\n\t}\n\t.todo-container .todo-wrap {\n\t\tpadding: 10px;\n\t\tborder: 1px solid #ddd;\n\t\tborder-radius: 5px;\n\t}\n</style>"]},"metadata":{},"sourceType":"module"}